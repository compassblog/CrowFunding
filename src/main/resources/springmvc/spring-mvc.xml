<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx
	    http://www.springframework.org/schema/tx/spring-tx.xsd
		">
   
    <!-- Configures the @Controller programming model -->
	<!-- 设置全局编码: 可解决 @ResponseBody 返回中文乱码问题 -->
	<mvc:annotation-driven >
		<!-- 消息转换器 -->
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes" value="text/html;charset=UTF-8"/>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

    <!-- Enable transaction demarcation with annotations -->
<!--     <tx:annotation-driven /> -->

	<context:component-scan base-package="com.tide.controller" />

	<!-- json: spring 4.x (It's different from spring 3.x) -->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<!-- maps request URLs to Controller names -->
<!--     <bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping"/> -->

	<!-- Forwards requests to the "/" resource to the "welcome" view -->
<!--     <mvc:view-controller path="/" view-name="welcome"/> -->

	<!-- view path -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!-- <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
	    <property name="viewResolvers">
	        <list>
	            <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
	            <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	                <property name="prefix" value="/"/>
	                <property name="suffix" value=".jsp"/>
	            </bean>
	        </list>
	    </property>
	    <property name="defaultViews">
	        <list>
	            <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
	        </list>
	    </property>
	</bean> -->

     <!--配置spirngMVC-web的静态资源，不配会当成控制器-->
    <mvc:resources mapping="/admin/**" location="/admin/"/>

	<!-- 文件上传相关配置 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- one of the properties available; the maximum file size in bytes -->
		<!--<property name="maxUploadSize" value="100000"/>-->

	</bean>
    
    <mvc:interceptors>
    	<!-- 拦截所有请求 -->
     	<!--<bean class="com.ikang.interceptor.admin.AdminLoginInterceptor"></bean> -->

    	<!-- 拦截特定请求: 后台登录判断 -->
    	<mvc:interceptor>
    		<!-- 配置的是 url 路径, @RequestMapping 指定 -->
    		<mvc:mapping path="/admin/**"/>
    		<mvc:exclude-mapping path="/admin/Login/**"/>
    		<!-- <mvc:mapping path="/aIndex/**" />
    		<mvc:mapping path="/aAdmin/**" /> -->
    		<bean class="com.tide.interceptor.admin.AdminLoginInterceptor"></bean>
    	</mvc:interceptor>

		<!-- 拦截特定请求: 前台登录判断 -->
		<mvc:interceptor>
			<!-- 配置的是 url 路径, @RequestMapping 指定 -->
			<mvc:mapping path="/front/**"/>
			<mvc:exclude-mapping path="/front/Index/oauth2.do"/>
			<bean class="com.tide.interceptor.front.FrontLoginInterceptor"></bean>
		</mvc:interceptor>

    </mvc:interceptors>
    
</beans>